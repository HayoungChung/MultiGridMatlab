function [vcoarse] = Restrict3D(vfine,nx,ny,nz)
%% Takes a vector vfine and restricts it to a coarse grid vector vcoarse

% the n in the multigrid tutorial book is n = nx+1;
% 1st unpack the vector:
vFineMat = reshape(vfine,[nx,ny,nz]);
% Now allocate the coarse grid 
ny = length(vfine)/(nx*nz);
nz = length(vfine)/(nx*ny);
vCoarseMat = zeros((size(vFineMat)+1)/2-1);
% Do the restriction:
for k = 1:(nz+1)/2-1
    for j=1:(ny+1)/2-1
        for i = 1:(nx+1)/2-1
        vCoarseMat(i,j,k) = 1/64*(...
              vFineMat(2*i-1,2*j-1,2*k-1) + vFineMat(2*i+1,2*j+1,2*k+1)...
            + vFineMat(2*i-1,2*j-1,2*k+1) + vFineMat(2*i-1,2*j+1,2*k-1) + vFineMat(2*i+1,2*j-1,2*k-1)...
            + vFineMat(2*i+1,2*j-1,2*k+1)+ vFineMat(2*i+1,2*j+1,2*k-1) +  vFineMat(2*i-1,2*j+1,2*k+1)...
          + 2*( vFineMat(2*i,2*j-1,2*k-1) + vFineMat(2*i-1,2*j,2*k-1) + vFineMat(2*i-1,2*j-1,2*k)...
              + vFineMat(2*i,2*j+1,2*k+1) + vFineMat(2*i+1,2*j,2*k+1) + vFineMat(2*i+1,2*j+1,2*k)...
              + vFineMat(2*i,2*j-1,2*k+1) + vFineMat(2*i-1,2*j,2*k+1) + vFineMat(2*i-1,2*j+1,2*k)...
              + vFineMat(2*i,2*j+1,2*k-1) + vFineMat(2*i+1,2*j,2*k-1) + vFineMat(2*i+1,2*j-1,2*k))...
          + 4*(vFineMat(2*i,2*j,2*k-1) + vFineMat(2*i,2*j,2*k+1) + ...
               vFineMat(2*i,2*j-1,2*k) + vFineMat(2*i,2*j+1,2*k) + ...
               vFineMat(2*i-1,2*j,2*k) + vFineMat(2*i+1,2*j,2*k))...
          + 8*(vFineMat(2*i,2*j,2*k)));
        end
    end
end
% Pack the restricted matrix back to a vector:
vcoarse = reshape(vCoarseMat,[((nx+1)/2-1)*((ny+1)/2-1)*((nz+1)/2-1),1]);